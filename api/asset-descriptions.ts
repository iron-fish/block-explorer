/**
 * Generated by orval v6.11.1 üç∫
 * Do not edit manually.
 * Iron Fish API
 * The Rest API to enable public access to Iron Fish data
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse,
  AxiosError
} from 'axios'
import {
  useQuery
} from '@tanstack/react-query'
import type {
  UseQueryOptions,
  QueryFunction,
  UseQueryResult,
  QueryKey
} from '@tanstack/react-query'
import type {
  AssetDescriptionsListParams
} from './ironfish.schemas'



/**
 * @summary Lists asset descriptions
 */
export const assetDescriptionsList = (
    params: AssetDescriptionsListParams, options?: AxiosRequestConfig
 ): Promise<AxiosResponse<void>> => {
    return axios.get(
      `/asset_descriptions`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }


export const getAssetDescriptionsListQueryKey = (params: AssetDescriptionsListParams,) => [`/asset_descriptions`, ...(params ? [params]: [])];

    
export type AssetDescriptionsListQueryResult = NonNullable<Awaited<ReturnType<typeof assetDescriptionsList>>>
export type AssetDescriptionsListQueryError = AxiosError<unknown>

export const useAssetDescriptionsList = <TData = Awaited<ReturnType<typeof assetDescriptionsList>>, TError = AxiosError<unknown>>(
 params: AssetDescriptionsListParams, options?: { query?:UseQueryOptions<Awaited<ReturnType<typeof assetDescriptionsList>>, TError, TData>, axios?: AxiosRequestConfig}

  ):  UseQueryResult<TData, TError> & { queryKey: QueryKey } => {

  const {query: queryOptions, axios: axiosOptions} = options ?? {};

  const queryKey =  queryOptions?.queryKey ?? getAssetDescriptionsListQueryKey(params);

  


  const queryFn: QueryFunction<Awaited<ReturnType<typeof assetDescriptionsList>>> = ({ signal }) => assetDescriptionsList(params, { signal, ...axiosOptions });


  

  const query = useQuery<Awaited<ReturnType<typeof assetDescriptionsList>>, TError, TData>(queryKey, queryFn, queryOptions) as  UseQueryResult<TData, TError> & { queryKey: QueryKey };

  query.queryKey = queryKey;

  return query;
}

