/**
 * Generated by orval v6.11.1 üç∫
 * Do not edit manually.
 * Iron Fish API
 * The Rest API to enable public access to Iron Fish data
 */
export type UsersListEventType = typeof UsersListEventType[keyof typeof UsersListEventType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UsersListEventType = {
  BLOCK_MINED: 'BLOCK_MINED',
  BUG_CAUGHT: 'BUG_CAUGHT',
  COMMUNITY_CONTRIBUTION: 'COMMUNITY_CONTRIBUTION',
  PULL_REQUEST_MERGED: 'PULL_REQUEST_MERGED',
  SOCIAL_MEDIA_PROMOTION: 'SOCIAL_MEDIA_PROMOTION',
  NODE_UPTIME: 'NODE_UPTIME',
  SEND_TRANSACTION: 'SEND_TRANSACTION',
  MULTI_ASSET_TRANSFER: 'MULTI_ASSET_TRANSFER',
  MULTI_ASSET_BURN: 'MULTI_ASSET_BURN',
  MULTI_ASSET_MINT: 'MULTI_ASSET_MINT',
  POOL4: 'POOL4',
} as const;

export type UsersListParams = { after?: number; before?: number; limit?: number; order_by?: string; country_code?: string; search?: string; event_type?: UsersListEventType };

export type UsersMetricsGranularity = typeof UsersMetricsGranularity[keyof typeof UsersMetricsGranularity];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UsersMetricsGranularity = {
  day: 'day',
  lifetime: 'lifetime',
  total: 'total',
} as const;

export type UsersMetricsParams = { start?: string; end?: string; granularity: UsersMetricsGranularity };

export type UsersFindParams = { graffiti: string };

export type TransactionsListParams = { after?: number; before?: number; limit?: number };

export type TransactionsFindParams = { hash: string; with_blocks?: boolean };

export type EventsListParams = { after?: number; before?: number; limit?: number; user_id?: number };

export type BlocksMetricsGranularity = typeof BlocksMetricsGranularity[keyof typeof BlocksMetricsGranularity];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const BlocksMetricsGranularity = {
  day: 'day',
  lifetime: 'lifetime',
  total: 'total',
} as const;

export type BlocksMetricsParams = { start: string; end: string; granularity: BlocksMetricsGranularity };

export type BlocksFindParams = { hash?: string; sequence?: number; with_transactions?: boolean };

export type BlocksListParams = { after?: number; before?: number; limit?: number; main?: boolean; search?: string; sequence_gte?: number; sequence_lt?: number; transaction_id?: number; with_transactions?: boolean };

export type AssetsListParams = { after?: number; before?: number; limit?: number; search?: string };

export type AssetsFindParams = { id: string };

export type AssetDescriptionsListParams = { after?: number; before?: number; limit?: number; asset: string };

